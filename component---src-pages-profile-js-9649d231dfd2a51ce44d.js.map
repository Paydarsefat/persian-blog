{"version":3,"sources":["webpack:///./src/pages/profile.js"],"names":["Profile","location","app","useContext","MyApp","useState","isLoading","setIsLoading","setTransactions","first_name","user","userData","last_name","email","formProfileValues","setFormRegisterValues","old_password","new_password","formPasswordValues","setFormPasswordValues","responseOfProfileAPI","setResponseOfApiProfile","responseOfPasswordAPI","setResponseOfPasswordAPI","handleChangeRegisterForm","name","event","preventDefault","target","value","handleChangePasswordForm","handleUpdateProfle","a","fetchHandler","method","url","body","auth","result","data","success","type","message","updateUser","console","error","handleUpdatePassword","handleLoadTransactions","useEffect","title","page","id","className","to","src","image","alt","defaultActiveKey","onSelect","key","eventKey","loading","onSubmit","variant","Group","controlId","Label","Control","onChange","placeholder","disabled"],"mappings":"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","file":"component---src-pages-profile-js-9649d231dfd2a51ce44d.js","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport { Link } from 'gatsby'\nimport Layout from '../components/Layout/Layout'\nimport SEO from '../components/SEO/SEO'\nimport MyApp from '../contexts/MyApp'\nimport loading from '../components/Icon/loading.gif'\nimport { Alert, Form, Button, Tabs, Tab, Table } from 'react-bootstrap'\nimport fetchHandler from '../utils/fetchHandler'\nimport formatPrice from '../utils/formatPrice'\n\nconst Profile = ({ location }) => {\n  const app = useContext(MyApp)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [transactions, setTransactions] = useState([])\n\n  const [formProfileValues, setFormRegisterValues] = useState({\n    first_name: app.user.userData.first_name,\n    last_name: app.user.userData.last_name,\n    email: app.user.userData.email,\n  })\n  const [formPasswordValues, setFormPasswordValues] = useState({\n    old_password: '',\n    new_password: '',\n  })\n\n  const [responseOfProfileAPI, setResponseOfApiProfile] = useState(null)\n  const [responseOfPasswordAPI, setResponseOfPasswordAPI] = useState(null)\n\n  const handleChangeRegisterForm = (name, event) => {\n    if (event) event.preventDefault()\n    setFormRegisterValues({\n      ...formProfileValues,\n      [name]: event.target.value,\n    })\n  }\n  const handleChangePasswordForm = (name, event) => {\n    if (event) event.preventDefault()\n    setFormPasswordValues({\n      ...formPasswordValues,\n      [name]: event.target.value,\n    })\n  }\n\n  const handleUpdateProfle = async (event) => {\n    if (event) event.preventDefault()\n    setIsLoading(true)\n\n    try {\n      const result = await fetchHandler({\n        method: 'POST',\n        url: '/api/v1/user/profileUpdate',\n        body: {\n          first_name: formProfileValues.first_name,\n          last_name: formProfileValues.last_name,\n          email: formProfileValues.email,\n        },\n        auth: true,\n      })\n      if (result.data.success) {\n        setResponseOfApiProfile({\n          type: 'success',\n          message: 'پروفایل شما با موفقیت آپدیت شد',\n        })\n        app.user.updateUser()\n      } else {\n        setResponseOfApiProfile({\n          type: 'danger',\n          message: result.data.message,\n        })\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    setIsLoading(false)\n  }\n\n  const handleUpdatePassword = async (event) => {\n    if (event) event.preventDefault()\n    setIsLoading(true)\n\n    try {\n      const result = await fetchHandler({\n        method: 'POST',\n        url: '/api/v1/user/passwordUpdate',\n        body: {\n          old_password: formPasswordValues.old_password,\n          new_password: formPasswordValues.new_password,\n        },\n        auth: true,\n      })\n      if (result.data.success) {\n        setResponseOfPasswordAPI({\n          type: 'success',\n          message: 'کلمه عبور شما با موفقیت آپدیت شد',\n        })\n        app.user.updateUser()\n      } else {\n        setResponseOfPasswordAPI({\n          type: 'danger',\n          message: result.data.message,\n        })\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    setIsLoading(false)\n  }\n\n  const handleLoadTransactions = async (event) => {\n    if (event) event.preventDefault()\n    setIsLoading(true)\n\n    try {\n      const result = await fetchHandler({\n        method: 'GET',\n        url: '/api/v1/transaction',\n        auth: true,\n      })\n      if (result.data.success) {\n        setTransactions(result.data.result)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    setIsLoading(false)\n  }\n\n  const onSelect = (key) => {\n    if (key === 'transactions') {\n      handleLoadTransactions()\n    }\n  }\n\n  useEffect(() => {\n    setFormRegisterValues({\n      first_name: app.user.userData.first_name,\n      last_name: app.user.userData.last_name,\n      email: app.user.userData.email,\n    })\n  }, [\n    app.user.userData.first_name,\n    app.user.userData.last_name,\n    app.user.userData.email,\n  ])\n\n  return (\n    <Layout location={location} title={'پروفایل'} page=\"about\">\n      <SEO title={'پروفایل'} />\n      {!app.user.userData.id && (\n        <div className=\"alert alert-info widthAll\">\n          شما به این بخش دسترسی ندارید، لطفا وارد شوید\n        </div>\n      )}\n      {app.user.userData.id && (\n        <div id=\"content\">\n          <div className=\"container\">\n            <div className=\"breadcrumb\">\n              <ul>\n                <li>\n                  <Link to={'/'}>\n                    <i className=\"fas fa-home\"></i>خانه\n                  </Link>\n                </li>\n                <li className=\"active\">پروفایل</li>\n              </ul>\n            </div>\n            <div className=\"about-us\">\n              <div className=\"row content-container\">\n                <>\n                  <div className=\"col-12 col-md-4 col-lg-3 profle-image\">\n                    <img src={app.user.userData.image} alt=\"profile\" />\n                  </div>\n                  <div className=\"col-12 col-md-8 col-lg-9 profle\">\n                    <Tabs defaultActiveKey=\"editProfile\" onSelect={onSelect}>\n                      <Tab eventKey=\"editProfile\" title=\"ویرایش پروفایل\">\n                        <div className=\"profile-tabs\">\n                          <div className=\"prifle-tab-heading\">\n                            {isLoading && (\n                              <img\n                                className=\"loading\"\n                                src={loading}\n                                alt=\"loading\"\n                              />\n                            )}\n                            <h1>\n                              پروفایل\n                              {` `}\n                              {app.user.userData.first_name}\n                              {` `}\n                              {app.user.userData.last_name}\n                            </h1>\n                          </div>\n\n                          <Form\n                            onSubmit={!isLoading ? handleUpdateProfle : null}\n                          >\n                            <div className=\"profile-body\">\n                              <div className=\"profile-body-form\">\n                                {responseOfProfileAPI && (\n                                  <Alert variant={responseOfProfileAPI.type}>\n                                    {responseOfProfileAPI.message}\n                                  </Alert>\n                                )}\n                                <Form.Group controlId=\"formBasicText\">\n                                  <Form.Label>نام</Form.Label>\n                                  <Form.Control\n                                    onChange={(event) =>\n                                      handleChangeRegisterForm(\n                                        'first_name',\n                                        event\n                                      )\n                                    }\n                                    type=\"text\"\n                                    value={formProfileValues.first_name}\n                                    placeholder=\"نام خود را وارد نمایید\"\n                                  />\n                                </Form.Group>\n                                <Form.Group controlId=\"formBasicText\">\n                                  <Form.Label>نام خانوادگی</Form.Label>\n                                  <Form.Control\n                                    onChange={(event) =>\n                                      handleChangeRegisterForm(\n                                        'last_name',\n                                        event\n                                      )\n                                    }\n                                    type=\"text\"\n                                    value={formProfileValues.last_name}\n                                    placeholder=\"نام خانوادگی خود را وارد نمایید\"\n                                  />\n                                </Form.Group>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                  <Form.Label>ایمیل</Form.Label>\n                                  <Form.Control\n                                    type=\"email\"\n                                    onChange={(event) =>\n                                      handleChangeRegisterForm('email', event)\n                                    }\n                                    value={formProfileValues.email}\n                                    placeholder=\"ایمیل خود را وارد نمایید\"\n                                  />\n                                </Form.Group>\n                                <Button\n                                  variant=\"primary\"\n                                  type=\"submit\"\n                                  disabled={isLoading}\n                                >\n                                  ویرایش پروفایل\n                                </Button>\n                              </div>\n                            </div>\n                          </Form>\n                        </div>\n                      </Tab>\n                      {/* <Tab eventKey=\"transactions\" title=\"تراکنشات\">\n                        <div className=\"profile-tabs\">\n                          <h1>تراکنشات</h1>\n                          <div>\n                            {transactions.length === 0 && (\n                              <Alert variant={'info'}>\n                                هیچ تراکنشی ثبت نشده است\n                              </Alert>\n                            )}\n                            {transactions.length > 0 && (\n                              <div>\n                                <Table striped bordered hover>\n                                  <thead>\n                                    <tr>\n                                      <th>شناسه</th>\n                                      <th>قیمت</th>\n                                      <th>وضعیت</th>\n                                      <th>دوره</th>\n                                      <th>پیام</th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    {transactions.map((item, index) => (\n                                      <tr>\n                                        <td>{index + 1}</td>\n                                        <td>\n                                          {formatPrice(item.amount)} تومان\n                                        </td>\n                                        <td>\n                                          {item.status === 'prepared'\n                                            ? 'در حال انتظار'\n                                            : 'تکمیل شده'}\n                                        </td>\n                                        <td>\n                                          {item.course === 'react-basic'\n                                            ? 'دوره React JS مقدماتی'\n                                            : 'دوره React JS پیشرفته'}\n                                        </td>\n                                        <td>{item.message}</td>\n                                      </tr>\n                                    ))}\n                                  </tbody>\n                                </Table>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </Tab> */}\n                      {/* <Tab eventKey=\"courses\" title=\"دوره‌ها\">\n                        <div className=\"profile-tabs\">\n                          <h1>دوره‌ها</h1>\n                          <div>AA</div>\n                        </div>\n                      </Tab> */}\n                      <Tab eventKey=\"changePassword\" title=\"تغییر رمز عبور\">\n                        <div className=\"profile-tabs\">\n                          <h1>تغییر رمز عبور</h1>\n                          <div>\n                            <Form\n                              onSubmit={\n                                !isLoading ? handleUpdatePassword : null\n                              }\n                            >\n                              <div className=\"profile-body\">\n                                <div className=\"profile-body-form\">\n                                  {responseOfPasswordAPI && (\n                                    <Alert variant={responseOfPasswordAPI.type}>\n                                      {responseOfPasswordAPI.message}\n                                    </Alert>\n                                  )}\n                                  <Form.Group controlId=\"formBasicText\">\n                                    <Form.Label>کلمه عبور فعلی</Form.Label>\n                                    <Form.Control\n                                      onChange={(event) =>\n                                        handleChangePasswordForm(\n                                          'old_password',\n                                          event\n                                        )\n                                      }\n                                      type=\"password\"\n                                      value={formPasswordValues.old_password}\n                                      placeholder=\"کلمه عبور فعلی خود را وارد کنید\"\n                                    />\n                                  </Form.Group>\n                                  <Form.Group controlId=\"formBasicText\">\n                                    <Form.Label>کلمه عبور جدید</Form.Label>\n                                    <Form.Control\n                                      onChange={(event) =>\n                                        handleChangePasswordForm(\n                                          'new_password',\n                                          event\n                                        )\n                                      }\n                                      type=\"password\"\n                                      value={formPasswordValues.new_password}\n                                      placeholder=\"کلمه عبور جدید خود را وارد کنید\"\n                                    />\n                                  </Form.Group>\n\n                                  <Button\n                                    variant=\"primary\"\n                                    type=\"submit\"\n                                    disabled={isLoading}\n                                  >\n                                    ویرایش کلمه عبور\n                                  </Button>\n                                </div>\n                              </div>\n                            </Form>\n                          </div>\n                        </div>\n                      </Tab>\n                    </Tabs>\n                  </div>\n                </>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </Layout>\n  )\n}\n\nexport default Profile\n"],"sourceRoot":""}