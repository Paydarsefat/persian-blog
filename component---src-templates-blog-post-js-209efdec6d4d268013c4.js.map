{"version":3,"sources":["webpack:///./src/components/video.js","webpack:///./src/templates/blog-post.js"],"names":["Video","videoSourceURL","videoTitle","style","width","className","controls","autoplay","minHeight","backgroundColor","src","title","allow","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","pageQuery","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","previous","next","frontmatter","description","excerpt","marginTop","rhythm","marginBottom","scale","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel"],"mappings":"uQACA,IAyBeA,EAzBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,Y,2HAAnB,2CACV,yBACIC,MAAO,CACHC,MAAO,QAEXC,UAAU,QACVC,UAAQ,EACRC,UAAQ,GAER,4BACIJ,MAAO,CACHC,MAAO,OACPI,UAAW,QACXC,gBAAiB,SAErBC,IAAKT,EACLU,MAAOT,EACPU,MAAM,0EACNC,YAAY,IACZC,sBAAsB,OACtBC,mBAAmB,OACnBC,iBAAe,M,YC2DdC,GAFEC,UAtEU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaf,MACjCgB,EAAmBP,EAAnBO,SAAUC,EAASR,EAATQ,KAClB,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUV,MAAOa,GACjC,kBAAC,IAAD,CACEb,MAAOW,EAAKO,YAAYlB,MACxBmB,YAAaR,EAAKO,YAAYC,aAAeR,EAAKS,UAEpD,iCACE,gCACE,wBACE5B,MAAO,CACL6B,UAAWC,YAAO,GAClBC,aAAc,IAGfZ,EAAKO,YAAYlB,OAEpB,uBACER,MAAK,iBACAgC,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,MAGtBX,EAAKO,YAAYQ,OAGtB,kBAAC,EAAD,CACEpC,eAAgBqB,EAAKO,YAAY5B,eACjCC,WAAYoB,EAAKO,YAAY3B,aAE/B,6BAASoC,wBAAyB,CAAEC,OAAQjB,EAAKkB,QACjD,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACErC,MAAO,CACLiC,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGjB,GACC,kBAAC,OAAD,CAAMkB,GAAIlB,EAASmB,OAAOC,KAAMC,IAAI,QAApC,KACKrB,EAASE,YAAYlB,QAI9B,4BACGiB,GACC,kBAAC,OAAD,CAAMiB,GAAIjB,EAAKkB,OAAOC,KAAMC,IAAI,QAC7BpB,EAAKC,YAAYlB,MADpB,WAaQ","file":"component---src-templates-blog-post-js-209efdec6d4d268013c4.js","sourcesContent":["import React from \"react\"\nconst Video = ({ videoSourceURL, videoTitle, ...props }) => (\n    <div \n        style={{\n            width: '100%'\n        }}\n        className=\"video\" \n        controls\n        autoplay\n    >\n        <iframe\n            style={{\n                width: '100%',\n                minHeight: '350px',\n                backgroundColor: 'white',\n            }}\n            src={videoSourceURL}\n            title={videoTitle}\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            frameBorder=\"0\"\n            webkitallowfullscreen=\"true\"\n            mozallowfullscreen=\"true\"\n            allowFullScreen\n        />\n    </div>\n)\nexport default Video","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Video from \"../components/video\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <Video\n          videoSourceURL={post.frontmatter.videoSourceURL}\n          videoTitle={post.frontmatter.videoTitle}\n        />\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description,\n        videoSourceURL,\n        videoTitle,\n      }\n    }\n  }\n`\n"],"sourceRoot":""}