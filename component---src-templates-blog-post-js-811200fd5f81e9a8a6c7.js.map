{"version":3,"sources":["webpack:///./src/components/Video/Video.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/templates/BlogPost.js"],"names":["Video","videoSourceURL","videoTitle","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","className","src","frameborder","title","allow","allowfullscreen","pageQuery","BlogPost","data","location","post","markdownRemark","siteTitle","site","siteMetadata","Header","frontmatter","description","excerpt","class","id","to","cover","childImageSharp","fluid","alt","dangerouslySetInnerHTML","__html","html"],"mappings":"uNACA,IAWeA,EAXD,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,YCDlB,SAAuCC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IDRX,2CACZ,yBAAKQ,UAAU,SACb,4BACEC,IAAKb,EACLc,YAAY,IACZC,MAAOd,EACPe,MAAM,0EACNC,iBAAe,ME0DRC,GAFEC,UAzDE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClBC,EAAOF,EAAKG,eACZC,EAAYJ,EAAKK,KAAKC,aAAaX,MACzC,OACE,kBAAC,IAAD,CAAQM,SAAUA,EAAUN,MAAOS,GACjC,kBAACG,EAAA,EAAD,MACA,kBAAC,IAAD,CACEZ,MAAOO,EAAKM,YAAYb,MACxBc,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,yBAAKC,MAAM,QAAQC,GAAG,WACpB,yBAAKD,MAAM,aACT,yBAAKA,MAAM,cACT,4BACE,4BACE,kBAAC,OAAD,CAAME,GAAI,KACR,uBAAGF,MAAM,gBADX,SAIF,wBAAIA,MAAM,UAAUT,EAAKM,YAAYb,SAGzC,yBAAKgB,MAAM,YACT,yBAAKA,MAAM,yBACRT,EAAKM,YAAY5B,gBAChB,yBAAK+B,MAAM,0CACT,kBAAC,EAAD,CACE/B,eAAgBsB,EAAKM,YAAY5B,eACjCC,WAAYqB,EAAKM,YAAY3B,eAIjCqB,EAAKM,YAAY5B,gBACjB,yBAAK+B,MAAM,0CACT,yBACElB,IACES,EAAKM,YAAYM,OACjBZ,EAAKM,YAAYM,MAAMC,gBAAgBC,MAAMvB,IAE/CwB,IAAKf,EAAKM,YAAYb,SAI5B,yBAAKgB,MAAM,oCACT,4BAAKT,EAAKM,YAAYb,OACtB,6BACA,6BACA,6BAASuB,wBAAyB,CAAEC,OAAQjB,EAAKkB,eAY3C","file":"component---src-templates-blog-post-js-811200fd5f81e9a8a6c7.js","sourcesContent":["import React from \"react\"\nconst Video = ({ videoSourceURL, videoTitle, ...props }) => (\n  <div className=\"Video\">\n    <iframe \n      src={videoSourceURL} \n      frameborder=\"0\" \n      title={videoTitle}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n      allowfullscreen>\n    </iframe>\n  </div>\n)\nexport default Video\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Header from \"../components/Header/Header\"\nimport Video from \"../components/Video/Video\"\n\nconst BlogPost = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Header />\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div class=\"no-pd\" id=\"content\">\n        <div class=\"container\">\n          <div class=\"breadcrumb\">\n            <ul>\n              <li>\n                <Link to={\"/\"}>\n                  <i class=\"fas fa-home\"></i>خانه\n                </Link>\n              </li>\n              <li class=\"active\">{post.frontmatter.title}</li>\n            </ul>\n          </div>\n          <div class=\"about-us\">\n            <div class=\"row content-container\">\n              {post.frontmatter.videoSourceURL && (\n                <div class=\"col-12 col-md-4 col-lg-4 content-video\">\n                  <Video\n                    videoSourceURL={post.frontmatter.videoSourceURL}\n                    videoTitle={post.frontmatter.videoTitle}\n                  />\n                </div>\n              )}\n              {!post.frontmatter.videoSourceURL && (\n                <div class=\"col-12 col-md-4 col-lg-4 content-image\">\n                  <img\n                    src={\n                      post.frontmatter.cover &&\n                      post.frontmatter.cover.childImageSharp.fluid.src\n                    }\n                    alt={post.frontmatter.title}\n                  />\n                </div>\n              )}\n              <div class=\"col-12 col-md-8 col-lg-8 content\">\n                <h1>{post.frontmatter.title}</h1>\n                <br />\n                <br />\n                <section dangerouslySetInnerHTML={{ __html: post.html }} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n         query BlogPostBySlug($slug: String!) {\n           site {\n             siteMetadata {\n               title\n             }\n           }\n           markdownRemark(fields: { slug: { eq: $slug } }) {\n             id\n             excerpt(pruneLength: 160)\n             html\n             frontmatter {\n               title\n               date(formatString: \"MMMM DD, YYYY\")\n               description\n               videoSourceURL\n               category\n               videoTitle\n               cover {\n                 childImageSharp {\n                   fluid(maxWidth: 800) {\n                     ...GatsbyImageSharpFluid\n                   }\n                 }\n               }\n             }\n           }\n         }\n       `\n"],"sourceRoot":""}